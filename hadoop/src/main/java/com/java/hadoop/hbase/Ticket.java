// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ticket.proto

package com.java.hadoop.hbase;

public final class Ticket {
  private Ticket() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ticketOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string type = 1;
    /**
     * <code>required string type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required string type = 1;</code>
     */
    String getType();
    /**
     * <code>required string type = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    // required string time = 2;
    /**
     * <code>required string time = 2;</code>
     */
    boolean hasTime();
    /**
     * <code>required string time = 2;</code>
     */
    String getTime();
    /**
     * <code>required string time = 2;</code>
     */
    com.google.protobuf.ByteString
        getTimeBytes();

    // required string dialNumber = 3;
    /**
     * <code>required string dialNumber = 3;</code>
     */
    boolean hasDialNumber();
    /**
     * <code>required string dialNumber = 3;</code>
     */
    String getDialNumber();
    /**
     * <code>required string dialNumber = 3;</code>
     */
    com.google.protobuf.ByteString
        getDialNumberBytes();
  }
  /**
   * Protobuf type {@code com.java.hadoop.hbase.ticket}
   */
  public static final class ticket extends
      com.google.protobuf.GeneratedMessage
      implements ticketOrBuilder {
    // Use ticket.newBuilder() to construct.
    private ticket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ticket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ticket defaultInstance;
    public static ticket getDefaultInstance() {
      return defaultInstance;
    }

    public ticket getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ticket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              type_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              time_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              dialNumber_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Ticket.internal_static_com_java_hadoop_hbase_ticket_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Ticket.internal_static_com_java_hadoop_hbase_ticket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ticket.class, Builder.class);
    }

    public static com.google.protobuf.Parser<ticket> PARSER =
        new com.google.protobuf.AbstractParser<ticket>() {
      public ticket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ticket(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<ticket> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private Object type_;
    /**
     * <code>required string type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string type = 1;</code>
     */
    public String getType() {
      Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string time = 2;
    public static final int TIME_FIELD_NUMBER = 2;
    private Object time_;
    /**
     * <code>required string time = 2;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string time = 2;</code>
     */
    public String getTime() {
      Object ref = time_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          time_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string time = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTimeBytes() {
      Object ref = time_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        time_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string dialNumber = 3;
    public static final int DIALNUMBER_FIELD_NUMBER = 3;
    private Object dialNumber_;
    /**
     * <code>required string dialNumber = 3;</code>
     */
    public boolean hasDialNumber() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string dialNumber = 3;</code>
     */
    public String getDialNumber() {
      Object ref = dialNumber_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dialNumber_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string dialNumber = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDialNumberBytes() {
      Object ref = dialNumber_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      type_ = "";
      time_ = "";
      dialNumber_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDialNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDialNumberBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDialNumberBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ticket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ticket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ticket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ticket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ticket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ticket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ticket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ticket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ticket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.java.hadoop.hbase.ticket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ticketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Ticket.internal_static_com_java_hadoop_hbase_ticket_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Ticket.internal_static_com_java_hadoop_hbase_ticket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ticket.class, Builder.class);
      }

      // Construct using com.java.hadoop.hbase.Ticket.ticket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        dialNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Ticket.internal_static_com_java_hadoop_hbase_ticket_descriptor;
      }

      public ticket getDefaultInstanceForType() {
        return ticket.getDefaultInstance();
      }

      public ticket build() {
        ticket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ticket buildPartial() {
        ticket result = new ticket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dialNumber_ = dialNumber_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ticket) {
          return mergeFrom((ticket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ticket other) {
        if (other == ticket.getDefaultInstance()) return this;
        if (other.hasType()) {
          bitField0_ |= 0x00000001;
          type_ = other.type_;
          onChanged();
        }
        if (other.hasTime()) {
          bitField0_ |= 0x00000002;
          time_ = other.time_;
          onChanged();
        }
        if (other.hasDialNumber()) {
          bitField0_ |= 0x00000004;
          dialNumber_ = other.dialNumber_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        if (!hasDialNumber()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ticket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ticket) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string type = 1;
      private Object type_ = "";
      /**
       * <code>required string type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string type = 1;</code>
       */
      public String getType() {
        Object ref = type_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string type = 1;</code>
       */
      public Builder setType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <code>required string type = 1;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }

      // required string time = 2;
      private Object time_ = "";
      /**
       * <code>required string time = 2;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string time = 2;</code>
       */
      public String getTime() {
        Object ref = time_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          time_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string time = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        Object ref = time_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          time_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string time = 2;</code>
       */
      public Builder setTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string time = 2;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = getDefaultInstance().getTime();
        onChanged();
        return this;
      }
      /**
       * <code>required string time = 2;</code>
       */
      public Builder setTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }

      // required string dialNumber = 3;
      private Object dialNumber_ = "";
      /**
       * <code>required string dialNumber = 3;</code>
       */
      public boolean hasDialNumber() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string dialNumber = 3;</code>
       */
      public String getDialNumber() {
        Object ref = dialNumber_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dialNumber_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string dialNumber = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDialNumberBytes() {
        Object ref = dialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          dialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string dialNumber = 3;</code>
       */
      public Builder setDialNumber(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        dialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string dialNumber = 3;</code>
       */
      public Builder clearDialNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dialNumber_ = getDefaultInstance().getDialNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required string dialNumber = 3;</code>
       */
      public Builder setDialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        dialNumber_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.java.hadoop.hbase.ticket)
    }

    static {
      defaultInstance = new ticket(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.java.hadoop.hbase.ticket)
  }

  public interface dticketOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.java.hadoop.hbase.ticket ticklist = 1;
    /**
     * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
     */
    java.util.List<ticket>
        getTicklistList();
    /**
     * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
     */
    ticket getTicklist(int index);
    /**
     * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
     */
    int getTicklistCount();
    /**
     * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
     */
    java.util.List<? extends ticketOrBuilder>
        getTicklistOrBuilderList();
    /**
     * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
     */
    ticketOrBuilder getTicklistOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code com.java.hadoop.hbase.dticket}
   */
  public static final class dticket extends
      com.google.protobuf.GeneratedMessage
      implements dticketOrBuilder {
    // Use dticket.newBuilder() to construct.
    private dticket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private dticket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final dticket defaultInstance;
    public static dticket getDefaultInstance() {
      return defaultInstance;
    }

    public dticket getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private dticket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                ticklist_ = new java.util.ArrayList<ticket>();
                mutable_bitField0_ |= 0x00000001;
              }
              ticklist_.add(input.readMessage(ticket.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          ticklist_ = java.util.Collections.unmodifiableList(ticklist_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Ticket.internal_static_com_java_hadoop_hbase_dticket_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Ticket.internal_static_com_java_hadoop_hbase_dticket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dticket.class, Builder.class);
    }

    public static com.google.protobuf.Parser<dticket> PARSER =
        new com.google.protobuf.AbstractParser<dticket>() {
      public dticket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new dticket(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<dticket> getParserForType() {
      return PARSER;
    }

    // repeated .com.java.hadoop.hbase.ticket ticklist = 1;
    public static final int TICKLIST_FIELD_NUMBER = 1;
    private java.util.List<ticket> ticklist_;
    /**
     * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
     */
    public java.util.List<ticket> getTicklistList() {
      return ticklist_;
    }
    /**
     * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
     */
    public java.util.List<? extends ticketOrBuilder>
        getTicklistOrBuilderList() {
      return ticklist_;
    }
    /**
     * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
     */
    public int getTicklistCount() {
      return ticklist_.size();
    }
    /**
     * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
     */
    public ticket getTicklist(int index) {
      return ticklist_.get(index);
    }
    /**
     * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
     */
    public ticketOrBuilder getTicklistOrBuilder(
        int index) {
      return ticklist_.get(index);
    }

    private void initFields() {
      ticklist_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getTicklistCount(); i++) {
        if (!getTicklist(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < ticklist_.size(); i++) {
        output.writeMessage(1, ticklist_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < ticklist_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, ticklist_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static dticket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dticket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dticket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dticket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dticket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static dticket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static dticket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static dticket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static dticket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static dticket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(dticket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.java.hadoop.hbase.dticket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements dticketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Ticket.internal_static_com_java_hadoop_hbase_dticket_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Ticket.internal_static_com_java_hadoop_hbase_dticket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dticket.class, Builder.class);
      }

      // Construct using com.java.hadoop.hbase.Ticket.dticket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTicklistFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (ticklistBuilder_ == null) {
          ticklist_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ticklistBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Ticket.internal_static_com_java_hadoop_hbase_dticket_descriptor;
      }

      public dticket getDefaultInstanceForType() {
        return dticket.getDefaultInstance();
      }

      public dticket build() {
        dticket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public dticket buildPartial() {
        dticket result = new dticket(this);
        int from_bitField0_ = bitField0_;
        if (ticklistBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            ticklist_ = java.util.Collections.unmodifiableList(ticklist_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.ticklist_ = ticklist_;
        } else {
          result.ticklist_ = ticklistBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dticket) {
          return mergeFrom((dticket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dticket other) {
        if (other == dticket.getDefaultInstance()) return this;
        if (ticklistBuilder_ == null) {
          if (!other.ticklist_.isEmpty()) {
            if (ticklist_.isEmpty()) {
              ticklist_ = other.ticklist_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTicklistIsMutable();
              ticklist_.addAll(other.ticklist_);
            }
            onChanged();
          }
        } else {
          if (!other.ticklist_.isEmpty()) {
            if (ticklistBuilder_.isEmpty()) {
              ticklistBuilder_.dispose();
              ticklistBuilder_ = null;
              ticklist_ = other.ticklist_;
              bitField0_ = (bitField0_ & ~0x00000001);
              ticklistBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTicklistFieldBuilder() : null;
            } else {
              ticklistBuilder_.addAllMessages(other.ticklist_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getTicklistCount(); i++) {
          if (!getTicklist(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dticket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dticket) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.java.hadoop.hbase.ticket ticklist = 1;
      private java.util.List<ticket> ticklist_ =
        java.util.Collections.emptyList();
      private void ensureTicklistIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          ticklist_ = new java.util.ArrayList<ticket>(ticklist_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ticket, ticket.Builder, ticketOrBuilder> ticklistBuilder_;

      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public java.util.List<ticket> getTicklistList() {
        if (ticklistBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ticklist_);
        } else {
          return ticklistBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public int getTicklistCount() {
        if (ticklistBuilder_ == null) {
          return ticklist_.size();
        } else {
          return ticklistBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public ticket getTicklist(int index) {
        if (ticklistBuilder_ == null) {
          return ticklist_.get(index);
        } else {
          return ticklistBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public Builder setTicklist(
          int index, ticket value) {
        if (ticklistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTicklistIsMutable();
          ticklist_.set(index, value);
          onChanged();
        } else {
          ticklistBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public Builder setTicklist(
          int index, ticket.Builder builderForValue) {
        if (ticklistBuilder_ == null) {
          ensureTicklistIsMutable();
          ticklist_.set(index, builderForValue.build());
          onChanged();
        } else {
          ticklistBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public Builder addTicklist(ticket value) {
        if (ticklistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTicklistIsMutable();
          ticklist_.add(value);
          onChanged();
        } else {
          ticklistBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public Builder addTicklist(
          int index, ticket value) {
        if (ticklistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTicklistIsMutable();
          ticklist_.add(index, value);
          onChanged();
        } else {
          ticklistBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public Builder addTicklist(
          ticket.Builder builderForValue) {
        if (ticklistBuilder_ == null) {
          ensureTicklistIsMutable();
          ticklist_.add(builderForValue.build());
          onChanged();
        } else {
          ticklistBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public Builder addTicklist(
          int index, ticket.Builder builderForValue) {
        if (ticklistBuilder_ == null) {
          ensureTicklistIsMutable();
          ticklist_.add(index, builderForValue.build());
          onChanged();
        } else {
          ticklistBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public Builder addAllTicklist(
          Iterable<? extends ticket> values) {
        if (ticklistBuilder_ == null) {
          ensureTicklistIsMutable();
          super.addAll(values, ticklist_);
          onChanged();
        } else {
          ticklistBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public Builder clearTicklist() {
        if (ticklistBuilder_ == null) {
          ticklist_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          ticklistBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public Builder removeTicklist(int index) {
        if (ticklistBuilder_ == null) {
          ensureTicklistIsMutable();
          ticklist_.remove(index);
          onChanged();
        } else {
          ticklistBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public ticket.Builder getTicklistBuilder(
          int index) {
        return getTicklistFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public ticketOrBuilder getTicklistOrBuilder(
          int index) {
        if (ticklistBuilder_ == null) {
          return ticklist_.get(index);  } else {
          return ticklistBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public java.util.List<? extends ticketOrBuilder>
           getTicklistOrBuilderList() {
        if (ticklistBuilder_ != null) {
          return ticklistBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ticklist_);
        }
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public ticket.Builder addTicklistBuilder() {
        return getTicklistFieldBuilder().addBuilder(
            ticket.getDefaultInstance());
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public ticket.Builder addTicklistBuilder(
          int index) {
        return getTicklistFieldBuilder().addBuilder(
            index, ticket.getDefaultInstance());
      }
      /**
       * <code>repeated .com.java.hadoop.hbase.ticket ticklist = 1;</code>
       */
      public java.util.List<ticket.Builder>
           getTicklistBuilderList() {
        return getTicklistFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ticket, ticket.Builder, ticketOrBuilder>
          getTicklistFieldBuilder() {
        if (ticklistBuilder_ == null) {
          ticklistBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ticket, ticket.Builder, ticketOrBuilder>(
                  ticklist_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          ticklist_ = null;
        }
        return ticklistBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.java.hadoop.hbase.dticket)
    }

    static {
      defaultInstance = new dticket(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.java.hadoop.hbase.dticket)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_java_hadoop_hbase_ticket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_java_hadoop_hbase_ticket_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_java_hadoop_hbase_dticket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_java_hadoop_hbase_dticket_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014ticket.proto\022\025com.java.hadoop.hbase\"8\n" +
      "\006ticket\022\014\n\004type\030\001 \002(\t\022\014\n\004time\030\002 \002(\t\022\022\n\nd" +
      "ialNumber\030\003 \002(\t\":\n\007dticket\022/\n\010ticklist\030\001" +
      " \003(\0132\035.com.java.hadoop.hbase.ticket"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_java_hadoop_hbase_ticket_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_java_hadoop_hbase_ticket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_java_hadoop_hbase_ticket_descriptor,
              new String[] { "Type", "Time", "DialNumber", });
          internal_static_com_java_hadoop_hbase_dticket_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_java_hadoop_hbase_dticket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_java_hadoop_hbase_dticket_descriptor,
              new String[] { "Ticklist", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
